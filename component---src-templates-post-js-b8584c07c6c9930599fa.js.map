{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["__webpack_require__","r","__webpack_exports__","d","postQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_common__WEBPACK_IMPORTED_MODULE_2__","_components_common_meta__WEBPACK_IMPORTED_MODULE_3__","Post","_ref","data","location","post","ghostPost","a","createElement","Fragment","type","className","feature_image","src","alt","title","dangerouslySetInnerHTML","__html","html","propTypes","PropTypes","shape","string","isRequired","object"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAaMY,EAAO,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACZC,EAAOF,EAAKG,UAElB,OACQX,EAAAY,EAAAC,cAAAb,EAAAY,EAAAE,SAAA,KACId,EAAAY,EAAAC,cAACR,EAAA,EAAD,CACIG,KAAMA,EACNC,SAAUA,EACVM,KAAK,YAETf,EAAAY,EAAAC,cAACT,EAAA,EAAD,KACIJ,EAAAY,EAAAC,cAAA,OAAKG,UAAU,aACXhB,EAAAY,EAAAC,cAAA,WAASG,UAAU,WACbN,EAAKO,cACHjB,EAAAY,EAAAC,cAAA,UAAQG,UAAU,sBACdhB,EAAAY,EAAAC,cAAA,OAAKK,IAAMR,EAAKO,cAAgBE,IAAMT,EAAKU,SACnC,KAChBpB,EAAAY,EAAAC,cAAA,WAASG,UAAU,qBACfhB,EAAAY,EAAAC,cAAA,MAAIG,UAAU,iBAAiBN,EAAKU,OAGpCpB,EAAAY,EAAAC,cAAA,WACIG,UAAU,qCACVK,wBAAyB,CAAEC,OAAQZ,EAAKa,cAU5EjB,EAAKkB,UAAY,CACbhB,KAAMiB,IAAUC,MAAM,CAClBf,UAAWc,IAAUC,MAAM,CACvBN,MAAOK,IAAUE,OAAOC,WACxBL,KAAME,IAAUE,OAAOC,WACvBX,cAAeQ,IAAUE,SAC1BC,aACJA,WACHnB,SAAUgB,IAAUI,OAAOD,YAGhBtB,YAER,IAAMR,EAAS","file":"component---src-templates-post-js-b8584c07c6c9930599fa.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport { Layout } from '../components/common'\r\nimport { MetaData } from '../components/common/meta'\r\n\r\n/**\r\n* Single post view (/:slug)\r\n*\r\n* This file renders a single post and loads all the content.\r\n*\r\n*/\r\nconst Post = ({ data, location }) => {\r\n    const post = data.ghostPost\r\n\r\n    return (\r\n            <>\r\n                <MetaData\r\n                    data={data}\r\n                    location={location}\r\n                    type=\"article\"\r\n                />\r\n                <Layout>\r\n                    <div className=\"container\">\r\n                        <article className=\"content\">\r\n                            { post.feature_image ?\r\n                                <figure className=\"post-feature-image\">\r\n                                    <img src={ post.feature_image } alt={ post.title } />\r\n                                </figure> : null }\r\n                            <section className=\"post-full-content\">\r\n                                <h1 className=\"content-title\">{post.title}</h1>\r\n\r\n                                {/* The main post content */ }\r\n                                <section\r\n                                    className=\"content-body load-external-scripts\"\r\n                                    dangerouslySetInnerHTML={{ __html: post.html }}\r\n                                />\r\n                            </section>\r\n                        </article>\r\n                    </div>\r\n                </Layout>\r\n            </>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostPost: PropTypes.shape({\r\n            title: PropTypes.string.isRequired,\r\n            html: PropTypes.string.isRequired,\r\n            feature_image: PropTypes.string,\r\n        }).isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Post\r\n\r\nexport const postQuery = graphql`\r\n    query($slug: String!) {\r\n        ghostPost(slug: { eq: $slug }) {\r\n            ...GhostPostFields\r\n        }\r\n    }\r\n`\r\n"],"sourceRoot":""}