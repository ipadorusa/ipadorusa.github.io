{"version":3,"sources":["webpack:///./src/templates/author.js"],"names":["Author","_ref","data","location","pageContext","author","ghostAuthor","posts","allGhostPost","edges","twitterUrl","twitter","replace","facebookUrl","facebook","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","_components_common_meta__WEBPACK_IMPORTED_MODULE_5__","type","_components_common__WEBPACK_IMPORTED_MODULE_4__","className","name","bio","website","href","target","rel","profile_image","src","alt","map","_ref2","node","key","id","post","propTypes","PropTypes","shape","string","isRequired","cover_image","object","pathname","pageQuery"],"mappings":"4MAaMA,EAAS,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,YACxBC,EAASH,EAAKI,YACdC,EAAQL,EAAKM,aAAaC,MAC1BC,EAAaL,EAAOM,QAAP,uBAAwCN,EAAOM,QAAQC,QAAQ,KAAvB,IAAqC,KAC1FC,EAAcR,EAAOS,SAAP,4BAA8CT,EAAOS,SAASF,QAAQ,MAAxB,IAAuC,KAEzG,OACIG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIjB,KAAMA,EACNC,SAAUA,EACViB,KAAK,YAETL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACXP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,iBACdP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,yBACXP,EAAAC,EAAAC,cAAA,UAAKZ,EAAOkB,MACXlB,EAAOmB,KAAOT,EAAAC,EAAAC,cAAA,SAAIZ,EAAOmB,KAC1BT,EAAAC,EAAAC,cAAA,OAAKK,UAAU,sBACVjB,EAAOoB,SAAWV,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAAqBI,KAAMrB,EAAOoB,QAASE,OAAO,SAASC,IAAI,uBAA5E,WAClBlB,GAAcK,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAAqBI,KAAMhB,EAAYiB,OAAO,SAASC,IAAI,uBAAxE,WACdf,GAAeE,EAAAC,EAAAC,cAAA,KAAGK,UAAU,qBAAqBI,KAAMb,EAAac,OAAO,SAASC,IAAI,uBAAzE,cAGxBb,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uBACVjB,EAAOwB,eAAiBd,EAAAC,EAAAC,cAAA,OAAKa,IAAKzB,EAAOwB,cAAeE,IAAK1B,EAAOkB,SAG7ER,EAAAC,EAAAC,cAAA,WAASK,UAAU,aACdf,EAAMyB,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAEPnB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUc,IAAKD,EAAKE,GAAIC,KAAMH,OAGtCnB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYjB,YAAaA,QAO7CJ,EAAOsC,UAAY,CACfpC,KAAMqC,IAAUC,MAAM,CAClBlC,YAAaiC,IAAUC,MAAM,CACzBjB,KAAMgB,IAAUE,OAAOC,WACvBC,YAAaJ,IAAUE,OACvBZ,cAAeU,IAAUE,OACzBhB,QAASc,IAAUE,OACnBjB,IAAKe,IAAUE,OACftC,SAAUoC,IAAUE,OACpB3B,SAAUyB,IAAUE,OACpB9B,QAAS4B,IAAUE,SAEvBjC,aAAc+B,IAAUK,OAAOF,aAChCA,WACHvC,SAAUoC,IAAUC,MAAM,CACtBK,SAAUN,IAAUE,OAAOC,aAC5BA,WACHtC,YAAamC,IAAUK,QAGZ5C,YAER,IAAM8C,EAAS","file":"component---src-templates-author-js-c96289253f0c69e4effa.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport { Layout, PostCard, Pagination } from '../components/common'\r\nimport { MetaData } from '../components/common/meta'\r\n\r\n/**\r\n* Author page (/author/:slug)\r\n*\r\n* Loads all posts for the requested author incl. pagination.\r\n*\r\n*/\r\nconst Author = ({ data, location, pageContext }) => {\r\n    const author = data.ghostAuthor\r\n    const posts = data.allGhostPost.edges\r\n    const twitterUrl = author.twitter ? `https://twitter.com/${author.twitter.replace(/^@/, ``)}` : null\r\n    const facebookUrl = author.facebook ? `https://www.facebook.com/${author.facebook.replace(/^\\//, ``)}` : null\r\n\r\n    return (\r\n        <>\r\n            <MetaData\r\n                data={data}\r\n                location={location}\r\n                type=\"profile\"\r\n            />\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <header className=\"author-header\">\r\n                        <div className=\"author-header-content\">\r\n                            <h1>{author.name}</h1>\r\n                            {author.bio && <p>{author.bio}</p>}\r\n                            <div className=\"author-header-meta\">\r\n                                {author.website && <a className=\"author-header-item\" href={author.website} target=\"_blank\" rel=\"noopener noreferrer\">Website</a>}\r\n                                {twitterUrl && <a className=\"author-header-item\" href={twitterUrl} target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>}\r\n                                {facebookUrl && <a className=\"author-header-item\" href={facebookUrl} target=\"_blank\" rel=\"noopener noreferrer\">Facebook</a>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"author-header-image\">\r\n                            {author.profile_image && <img src={author.profile_image} alt={author.name} />}\r\n                        </div>\r\n                    </header>\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nAuthor.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostAuthor: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            cover_image: PropTypes.string,\r\n            profile_image: PropTypes.string,\r\n            website: PropTypes.string,\r\n            bio: PropTypes.string,\r\n            location: PropTypes.string,\r\n            facebook: PropTypes.string,\r\n            twitter: PropTypes.string,\r\n        }),\r\n        allGhostPost: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n}\r\n\r\nexport default Author\r\n\r\nexport const pageQuery = graphql`\r\n    query GhostAuthorQuery($slug: String!, $limit: Int!, $skip: Int!) {\r\n        ghostAuthor(slug: { eq: $slug }) {\r\n            ...GhostAuthorFields\r\n        }\r\n        allGhostPost(\r\n            sort: { order: DESC, fields: [published_at] },\r\n            filter: {authors: {elemMatch: {slug: {eq: $slug}}}},\r\n            limit: $limit,\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                ...GhostPostFields\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n"],"sourceRoot":""}